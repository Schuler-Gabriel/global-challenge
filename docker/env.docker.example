# Docker Environment Configuration
# Copy this file to .env.docker and adjust values as needed

# =================================
# Application Settings
# =================================

# Environment mode
ENVIRONMENT=production

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=4

# =================================
# Database Configuration
# =================================

# PostgreSQL
POSTGRES_DB=alerta_cheias
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
DATABASE_URL=postgresql://postgres:postgres@postgres:5432/alerta_cheias

# =================================
# Cache Configuration
# =================================

# Redis
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=
REDIS_URL=redis://redis:6379/0

# =================================
# External APIs
# =================================

# Gua√≠ba API
GUAIBA_API_URL=https://nivelguaiba.com.br/portoalegre.1day.json

# CPTEC API
CPTEC_API_URL=https://www.cptec.inpe.br/api/forecast-input?city=Porto%20Alegre%2C%20RS

# API Settings
API_TIMEOUT=10
MAX_RETRIES=3
BACKOFF_FACTOR=2

# =================================
# ML/Training Configuration
# =================================

# Jupyter Lab
JUPYTER_TOKEN=alerta_cheias_dev
JUPYTER_PASSWORD=
JUPYTER_ALLOW_ROOT=1
JUPYTER_ENABLE_LAB=yes

# TensorBoard
TENSORBOARD_LOG_DIR=/workspace/logs

# MLflow
MLFLOW_BACKEND_STORE_URI=/workspace/models/mlruns
MLFLOW_ARTIFACT_ROOT=/workspace/models/artifacts

# =================================
# Security Configuration
# =================================

# JWT Settings
SECRET_KEY=your-super-secret-key-change-this-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# CORS Settings
ALLOWED_ORIGINS=["http://localhost:3000", "http://localhost:8080"]
ALLOWED_METHODS=["GET", "POST", "PUT", "DELETE"]
ALLOWED_HEADERS=["*"]

# =================================
# Monitoring Configuration
# =================================

# Prometheus
PROMETHEUS_PORT=9090

# Grafana
GRAFANA_ADMIN_PASSWORD=admin
GRAFANA_PORT=3000

# =================================
# Nginx Configuration (Production)
# =================================

# SSL Configuration
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/key.pem

# Rate Limiting
NGINX_RATE_LIMIT=100r/m
NGINX_BURST_LIMIT=20

# =================================
# Logging Configuration
# =================================

# Log Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log Format (JSON, TEXT)
LOG_FORMAT=JSON

# Log Rotation
LOG_MAX_SIZE=100MB
LOG_BACKUP_COUNT=10

# =================================
# Performance Configuration
# =================================

# Cache TTL (seconds)
CACHE_TTL_FORECAST=300
CACHE_TTL_WEATHER=60
CACHE_TTL_ALERTS=30

# Connection Pool
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30
DB_POOL_TIMEOUT=30

# =================================
# Development Settings
# =================================

# Debug Mode
DEBUG=false

# Auto Reload
RELOAD=false

# Test Database
TEST_DATABASE_URL=postgresql://postgres:postgres@postgres:5432/alerta_cheias_test

# =================================
# Model Configuration
# =================================

# Model Path
MODEL_PATH=/app/models/lstm_model.h5

# Model Version
MODEL_VERSION=v1.0.0

# Prediction Settings
SEQUENCE_LENGTH=24
BATCH_SIZE=32
CONFIDENCE_THRESHOLD=0.75

# =================================
# Alert Configuration
# =================================

# Alert Thresholds
ALERT_RIVER_LEVEL_CRITICAL=3.60
ALERT_RIVER_LEVEL_HIGH=3.15
ALERT_RIVER_LEVEL_MODERATE=2.80

ALERT_RAIN_CRITICAL=50
ALERT_RAIN_HIGH=20

# =================================
# Backup Configuration
# =================================

# Backup Settings
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_PATH=/backups

# =================================
# Resource Limits (for docker-compose)
# =================================

# API Container
API_MEMORY_LIMIT=1g
API_CPU_LIMIT=1.0

# Training Container
TRAINING_MEMORY_LIMIT=4g
TRAINING_CPU_LIMIT=2.0

# Database Container
DB_MEMORY_LIMIT=2g
DB_CPU_LIMIT=1.0

# Redis Container
REDIS_MEMORY_LIMIT=512m
REDIS_CPU_LIMIT=0.5 