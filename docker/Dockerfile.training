# Dockerfile for ML Training Environment
FROM python:3.9-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    JUPYTER_ENABLE_LAB=yes \
    JUPYTER_TOKEN="" \
    JUPYTER_ALLOW_ROOT=1

# Install system dependencies including build tools for ML libraries
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    g++ \
    gfortran \
    libopenblas-dev \
    liblapack-dev \
    libblas-dev \
    libhdf5-dev \
    pkg-config \
    git \
    curl \
    vim \
    htop \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Upgrade pip and install wheel
RUN pip install --upgrade pip setuptools wheel

# Copy requirements and install Python dependencies
COPY requirements/development.txt /tmp/requirements.txt
RUN pip install -r /tmp/requirements.txt

# Install additional ML/training specific packages
RUN pip install \
    tensorboard>=2.13.0 \
    keras-tuner>=1.4.0 \
    optuna>=3.4.0 \
    mlflow>=2.7.0 \
    wandb>=0.15.0

# Create non-root user
RUN groupadd -r mluser && useradd -r -g mluser mluser

# Create directories
RUN mkdir -p /workspace /workspace/data /workspace/models /workspace/logs /workspace/notebooks && \
    chown -R mluser:mluser /workspace

# Copy application code
COPY --chown=mluser:mluser app/ /workspace/app/
COPY --chown=mluser:mluser notebooks/ /workspace/notebooks/
COPY --chown=mluser:mluser scripts/ /workspace/scripts/
COPY --chown=mluser:mluser data/ /workspace/data/
COPY --chown=mluser:mluser pyproject.toml /workspace/

# Switch to non-root user
USER mluser

# Set working directory
WORKDIR /workspace

# Set Python path
ENV PYTHONPATH="/workspace:$PYTHONPATH"

# Expose Jupyter port
EXPOSE 8888

# Expose TensorBoard port
EXPOSE 6006

# Expose MLflow port
EXPOSE 5000

# Health check for Jupyter
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8888/api || exit 1

# Create startup script
RUN echo '#!/bin/bash\n\
set -e\n\
echo "Starting ML Training Environment..."\n\
echo "Jupyter Lab will be available at: http://localhost:8888"\n\
echo "TensorBoard will be available at: http://localhost:6006"\n\
echo "MLflow will be available at: http://localhost:5000"\n\
\n\
# Start TensorBoard in background\n\
tensorboard --logdir=/workspace/logs --host=0.0.0.0 --port=6006 &\n\
\n\
# Start MLflow in background\n\
mlflow ui --host=0.0.0.0 --port=5000 --backend-store-uri=/workspace/models/mlruns &\n\
\n\
# Start Jupyter Lab\n\
jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --notebook-dir=/workspace\n\
' > /workspace/start.sh && chmod +x /workspace/start.sh

# Default command
CMD ["/workspace/start.sh"] 